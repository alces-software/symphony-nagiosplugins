#!/usr/bin/env ruby
################################################################################
# (c) Copyright 2007-2011 Alces Software Ltd                                   #
#                                                                              #
# HPC Cluster Toolkit                                                          #
#                                                                              #
# This file/package is part of the HPC Cluster Toolkit                         #
#                                                                              #
# This is free software: you can redistribute it and/or modify it under        #
# the terms of the GNU Affero General Public License as published by the Free  #
# Software Foundation, either version 3 of the License, or (at your option)    #
# any later version.                                                           #
#                                                                              #
# This file is distributed in the hope that it will be useful, but WITHOUT     #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or        #
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License #
# for more details.                                                            #
#                                                                              #
# You should have received a copy of the GNU Affero General Public License     #
# along with this product.  If not, see <http://www.gnu.org/licenses/>.        #
#                                                                              #
# For more information on Alces Software, please visit:                        #
# http://www.alces-software.org/                                               #
#                                                                              #
################################################################################
require ::File::join(::File::dirname(__FILE__),'alces-nagios.rb')

class NagiosChecker < Alces::NagiosCheck
  def execute
    case option(:result).to_s.upcase
    when 'OK'
      self.respond!(OK)
    when 'CRITICAL'
      self.respond!(CRIT)
    when 'WARN'
      required_option(:message)
      self.respond!(WARN,option(:message))
    else
      self.exit_code=WARN
      self.outputdata="This is only a sample checker. Options were #{self.options.inspect}. Value of Test option was #{option(:test).inspect}"
      self.perfdata="speed=60"
    end
  end  
end

if $0 == __FILE__
  checker=NagiosChecker.new.respond!
end
